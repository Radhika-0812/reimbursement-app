# docker-compose.yml  (at the same folder as your Dockerfile)

services:
  db:
    image: postgres:15
    container_name: rms-db
    environment:
      POSTGRES_DB: reimbursedb
      POSTGRES_USER: app
      POSTGRES_PASSWORD: "RADhi@081215"        # quoted due to special char
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"                             # optional: connect via localhost:5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d reimbursedb || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 40s
    restart: unless-stopped

  app:
    build:
      context: .                                # folder containing the Dockerfile
      dockerfile: Dockerfile

    container_name: rms-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,mappings
      SPRING_PROFILES_ACTIVE: prod
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/reimbursedb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: "RADhi@081215"
      # Use underscores in env var names; Spring maps them to app.security.jwt.*
      APP_SECURITY_JWT_HMAC_SECRET: "EmTAIbB2/tzdt798Ka6qtC6Epbm/nZespm2K+bRQ2kA="
      APP_SECURITY_JWT_ISSUER: rms-auth
      APP_SECURITY_JWT_EXPIRES_MIN: 60
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update


    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  pgdata:
